"""
Django settings for DjangoTemplate project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-iw0f7k^jcnf-ecrlp5qo=hf5_ub(^5su-q#(9orici+wg)iqjp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

VITE_APP_DIR = os.path.join(BASE_DIR, "frontend")

DATABASE_LOCATION = os.path.join(BASE_DIR.parent, "database")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crypto_calculator'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'database_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'frontend/dist')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'database_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_LOCATION / Path('default.sqlite3'),
        'TEST': {'DEPENDENCIES': [], 'NAME': 'test_default'},
    },
    'raw_price_data':{
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_LOCATION / Path('raw_price_data.sqlite3'),
        'TEST': {'DEPENDENCIES': [], 'NAME': 'test_raw_price_data'},
    },
    'returns':{
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_LOCATION / Path('returns.sqlite3'),
        'TEST': {'DEPENDENCIES': [],},
    },
    'factor_model_estimates':{
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_LOCATION / Path('factor_model_estimates.sqlite3'),
        'TEST': {'DEPENDENCIES': [], 'NAME': 'test_factor_model_estimates'},
    },
    'specific_risk_estimates':{
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATABASE_LOCATION / Path('specific_risk_estimates.sqlite3'),
        'TEST': {'DEPENDENCIES': [],},
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, "frontend/dist"),
    os.path.join(BASE_DIR, "frontend/src"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TEST_RUNNER = 'crypto_calculator.scripts.model_test_runner.ManagedModelTestRunner'
